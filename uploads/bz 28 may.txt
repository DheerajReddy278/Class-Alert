A - Binary Representation

#include <bits/stdc++.h>
#define ll long long
using namespace std;

void bin(ll n){
    ll i;
    string s="";
    s+="0";
    for (i = 1 << 30; i > 0; i = i / 2){
      if((n & i) != 0)
        s+="1";
      else
        s+="0";
    }
    int idx=0;
    for(int i=0;i<s.size();i++){
        if(s[i]=='0' && s[i+1]=='1'){
            idx=i;
            break;
        }
    }
    for(int i=idx+1;i<s.size();i++){
        cout<<s[i];
    }
    cout<<'\n';
  }
void solve(){
    int n;cin>>n;
    if(n==0) cout<<"0"<<'\n';
    else
    bin(n);
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t=1;
    cin>>t;
    for(ll i=1;i<=t;i++){
        solve();
    }
    
    return 0;
}


b

#include <bits/stdc++.h>
#define ll long long
using namespace std;

void solve(){
    int a,k;cin>>a>>k;
    int res= a&((1<<k)-1);
    cout<<res<<'\n';
}


int main()
{
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);
    int t=1;
    //cin>>t;
    for(ll i=1;i<=t;i++){
        solve();
    }
    
    return 0;
}

c
#include<bits/stdc++.h>
using namespace std;
map<int,int>M;
long long ans=0;
int main(){
	int n,a;
	cin>>n;
	while(n--){
		cin>>a;
		for(int i=0;i<=31;i++)	ans+=M[(1LL<<i)-a];
		M[a]++;
	}
	cout<<ans;
	return 0;
}











?b